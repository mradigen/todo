#! /bin/sh

#-- todo --#
# A script to manage your todo list
# Dependencies:
#   - none :)
# ~ ADIGEN

TODO_FILE="$HOME/.todo.md"
d='.' # Delimiter between number and task
alias echo="echo -e"

set -e

_usage() {
	cat <<EOF
Usage:
	todo							show your todo list
	todo [COMMAND] [TASK/NUMBER]	add/rm a task to your todo list

Commands:
	help							show this help
	add [TASK]						add a task
	rm [NUMBER]						remove a task
	done [NUMBER]					mark a task as done
	clean							remove all done tasks
	clear							remove all tasks
EOF
}

_list() {
	i=1
	while read -r line; do
		if echo "$line" | grep -q '^- \[x\]'; then
			# Completed task (- [x] Task)
			task_text=$(echo "$line" | sed 's/^- \[x\] //')
			echo "${i}${d} \e[9m${task_text}\e[0m"
		elif echo "$line" | grep -q '^- \[ \]'; then
			# Uncompleted task (- [ ] Task)
			task_text=$(echo "$line" | sed 's/^- \[ \] //')
			echo "${i}${d} \e[1m${task_text}\e[0m"
		elif echo "$line" | grep -q '^- '; then
			# Simple list item without checkbox (- Task)
			task_text=$(echo "$line" | sed 's/^- //')
			echo "${i}${d} \e[1m${task_text}\e[0m"
		else
			# Plain text, treat as uncompleted task
			echo "${i}${d} \e[1m${line}\e[0m"
		fi
		i=$((i + 1))
	done < "$TODO_FILE"
}

_add() {
	echo "- [ ] $@" >> $TODO_FILE
}

_rm() {
	sed -i "${1}d" $TODO_FILE
}

_done() {
	if [ -n "$(sed -n "${1}p" $TODO_FILE | grep '^- \[x\]')" ]; then
		echo "Task already done."
		exit 1
	else
		# Replace "- [ ]" with "- [x]" or add "- [x] " if its a plain task
		line=$(sed -n "${1}p" $TODO_FILE)
		if echo "$line" | grep -q '^- \[ \]'; then
			# Replace checkbox
			sed -i "${1}s/- \[ \]/- \[x\]/" $TODO_FILE
		elif echo "$line" | grep -q '^- '; then
			# Replace simple list item
			task_text=$(echo "$line" | sed 's/^- //')
			sed -i "${1}c\- \[x\] ${task_text}" $TODO_FILE
		else
			# Plain text
			sed -i "${1}c\- \[x\] ${line}" $TODO_FILE
		fi
	fi
}

_clean() {
	sed -i '/^\- \[x\]/d' $TODO_FILE
}

_clear() {
	read -s -n 1 -p 'Are you sure that you would like to clear your todo list? (y/n): ' ans
	[[ $ans = 'y' ]] && truncate -s 0 $TODO_FILE
}

case "$1" in
	help|-h|--help)
		_usage
		;;
	add)
		shift
		_add "$@"
		;;
	rm)
		shift
		_rm "$@"
		;;
	done)
		shift
		_done "$@"
		;;
	clean)
		_clean
		;;
	clear)
		_clear
		;;
	'')
		_list
		;;
	*)
		_usage
		exit 1
		;;
esac
